<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>
<!-- xml 이름상관 없음. *.xml로 설정했으니까 -->
<!-- 이 xml이 어떤 interface와 연결되는지 설정 -->
<mapper namespace="com.quiz.bank.dao.AdminStudyDAO">

	<update id="deleteDetailCate" parameterType="hashmap">
	UPDATE detailed_subject_category SET del_flag = TRUE WHERE detailed_subject_cate_no = #{detailed_subject_cate_no}
	</update>
	<update id="deleteSubjectCate" parameterType="hashmap">
	UPDATE subject_category SET del_flag = TRUE WHERE subject_cate_no = #{subject_cate_no}
	</update>
	<update id="deleteTestCate" parameterType="hashmap">
	UPDATE test_category SET del_flag = TRUE WHERE test_cate_no = #{test_cate_no}
	</update>

	<select id="testCategoryCall" resultType="hashmap">
	SELECT * FROM test_category WHERE del_flag = false
	</select>
	<select id="subjectCategoryCall" resultType="hashmap">
	SELECT * FROM subject_category WHERE del_flag = false AND test_cate_no = #{upperCate}
	</select>
	<select id="detailSubjectCategoryCall" resultType="hashmap">
	SELECT * FROM detailed_subject_category WHERE del_flag = false AND subject_cate_no = #{upperCate}
	</select>
	
	
	<insert id="registTestCategory" parameterType="hashmap">
	INSERT INTO test_category (test_cate) VALUES (#{registCategory})
	</insert>
	<insert id="registSubjectCategory" parameterType="hashmap">
	INSERT INTO subject_category (subject_cate,test_cate_no) VALUES (#{registCategory},${upperCateNo})
	</insert>
	<insert id="registDetailSubject" parameterType="hashmap">
	INSERT INTO detailed_subject_category (detailed_subject_cate,subject_cate_no) VALUES (#{registCategory},${upperCateNo})
	</insert>
	
	<select id="overlayTestCate" parameterType="hashmap" resultType="int">
	SELECT COUNT(test_cate) FROM test_category WHERE test_cate = #{registCategory} AND del_flag = false
	</select>
	<select id="overlaySubjectCate" parameterType="hashmap" resultType="int">
	SELECT COUNT(subject_cate) FROM subject_category WHERE subject_cate = #{registCategory} AND test_cate_no = #{upperCateNo} AND del_flag = false
	</select>
	<select id="overlayDetailSubjectCate" parameterType="hashmap" resultType="int">
	SELECT COUNT(detailed_subject_cate) FROM detailed_subject_category WHERE detailed_subject_cate = #{registCategory} AND subject_cate_no =#{upperCateNo} AND del_flag = false
	</select>
	
	
	<!-- 대분류 삭제 -->
	<update id="deleteTestCategory" parameterType="hashmap">
	UPDATE (test_category t left JOIN subject_category sc USING (test_cate_no) left JOIN detailed_subject_category dsc USING (subject_cate_no))
	SET t.del_flag = true , sc.del_flag = true , dsc.del_flag = true WHERE test_cate_no = #{test_cate_no}
	</update>
	
	
	<!-- 중분류 삭제 -->
	<update id="deleteSubjectCategory" parameterType="hashmap">
	UPDATE (subject_category sc LEFT JOIN detailed_subject_category dsc USING (subject_cate_no))
	SET sc.del_flag =TRUE , dsc.del_flag = TRUE WHERE subject_cate_no = #{subject_cate_no}
	</update>
	
	<!-- 소분류 삭제 -->
	<update id="adminDeleteDetailedSubjectCategory" parameterType="hashmap">
	UPDATE detailed_subject_category SET del_flag = true WHERE detailed_subject_cate_no = #{detailed_subject_cate_no}
	</update>
	
	<select id="getTestCategoryName" parameterType="hashmap" resultType="string">
	SELECT test_cate FROM test_category WHERE test_cate_no = #{test_category}
	</select>
	
	<select id="getSubjectCategoryList" parameterType="hashmap" resultType="hashmap">
	SELECT subject_cate_no ,subject_cate FROM subject_category WHERE test_cate_no = #{test_category} AND del_flag = false; 
	</select>
	<select id="getDetailedSubjectCategoryList" parameterType="hashmap" resultType="hashmap">
	SELECT test_cate_no,test_cate,subject_cate_no,subject_cate,detailed_subject_cate_no,detailed_subject_cate FROM test_category tc 
	LEFT JOIN subject_category sc USING (test_cate_no) 
	LEFT JOIN detailed_subject_category dsc  USING (subject_cate_no) 
	WHERE tc.del_flag = FALSE AND sc.del_flag = FALSE AND dsc.del_flag = FALSE AND test_cate_no = #{test_category} 
	</select>
	
	<insert id="registTest" useGeneratedKeys="true" keyColumn="test_no" keyProperty="test_no" parameterType="com.quiz.bank.dto.TestListDTO">
	INSERT INTO test_list 
	(test_cate_no,test_year,test_month,test_count,test_passrate,test_time,test_fullscore,pass_criterion)
	VALUES
	(#{test_cate_no},#{test_year},#{test_month},#{test_count},#{test_passrate},#{test_time},#{test_fullscore},#{pass_criterion})
	</insert>
	<insert id="registQuiz" useGeneratedKeys="true" keyColumn="quiz_no" keyProperty="quiz_no"  parameterType="com.quiz.bank.dto.QuizDTO">
	INSERT INTO quiz
	(test_no,test_cate_no,subject_cate_no,detailed_subject_cate_no,quiz_index,quiz_content,quiz_explation,quiz_type,option1,option2,option3,option4,option5,quiz_answer,quiz_point)
	VALUES
	(#{test_no},#{test_cate_no},#{subject_cate_no},#{detailed_subject_cate_no},#{quiz_index},#{quiz_content},#{quiz_explation},#{quiz_type},#{option1},#{option2},#{option3},#{option4},#{option5},#{quiz_answer},#{quiz_point})
	</insert>
	<insert id="registPhoto" parameterType="com.quiz.bank.dto.PhotoDTO">
	INSERT INTO photo (ori_filename,new_filename,board_no,board_name) VALUES (#{ori_filename},#{new_filename},#{board_no},#{board_name})
	</insert>
	
	
	<select id="adminQuizListQuizCountList" resultType="string">
	SELECT DISTINCT test_count FROM test_list
	</select>
	
	
	<select id="adminSearchQuiz" resultType="hashmap" parameterType="hashmap">
	SELECT * FROM quiz q
	LEFT JOIN test_category tc USING (test_cate_no)
	LEFT JOIN subject_category sc USING (subject_cate_no)
	LEFT JOIN detailed_subject_category dsc USING (detailed_subject_cate_no)
	LEFT JOIN test_list t USING (test_no)	
		<where>
		<if test="!test_year.equals('')">
		AND t.test_year = #{test_year}
		</if>
		<if test="!test_count.equals('')">
		AND t.test_count = #{test_count}
		</if>
		<if test="!test_cate_no.equals('')">
		AND q.test_cate_no = #{test_cate_no}	
		</if>
		<if test="!subject_cate_no.equals('')">
		AND q.subject_cate_no = #{subject_cate_no}
		</if>
		<if test="!detailed_subject_cate_no.equals('')">
		AND q.detailed_subject_cate_no = #{detailed_subject_cate_no}
		</if>
		<if test="quiz_content != null">
		AND quiz_content LIKE CONCAT ('%', #{quiz_content}, '%')
		</if>
	</where>
	ORDER BY quiz_no DESC LIMIT ${pagePerCnt} OFFSET ${offset}
	</select>
	
	<select id="allCount" resultType="int">
	SELECT count (quiz_no) FROM quiz q
	LEFT JOIN test_category tc USING (test_cate_no)
	LEFT JOIN subject_category sc USING (subject_cate_no)
	LEFT JOIN detailed_subject_category dsc USING (detailed_subject_cate_no)
	LEFT JOIN test_list t USING (test_no)	
		<where>
		<if test="!test_year.equals('')">
		AND t.test_year = #{test_year}
		</if>
		<if test="!test_count.equals('')">
		AND t.test_count = #{test_count}
		</if>
		<if test="!test_cate_no.equals('')">
		AND q.test_cate_no = #{test_cate_no}	
		</if>
		<if test="!subject_cate_no.equals('')">
		AND q.subject_cate_no = #{subject_cate_no}
		</if>
		<if test="!detailed_subject_cate_no.equals('')">
		AND q.detailed_subject_cate_no = #{detailed_subject_cate_no}
		</if>
		<if test="quiz_content != null">
		AND quiz_content LIKE CONCAT ('%', #{quiz_content}, '%')
		</if>
	</where>
	</select>
	
	<select id="adminUpdateQuizForm" resultType="hashmap">
	SELECT * FROM quiz LEFT JOIN photo ON (quiz.quiz_no = photo.board_no) WHERE quiz_no = #{param1}
	</select>
	
	<update id="updateQuiz" parameterType="hashmap">
	UPDATE quiz SET 
	quiz_content = #{quiz_content}
	,quiz_explation = #{quiz_explation}
	,detailed_subject_cate_no = #{detailed_subject_cate_no}
	,subject_cate_no = #{subject_cate_no}
	,quiz_point = #{quiz_point}
	,quiz_index = #{quiz_index}
	,quiz_type = #{quiz_type}
	,option1 = #{option1}
	,option2 = #{option2}
	,option3 = #{option3}
	,option4 = #{option4}
	,option5 = #{option5}
	,quiz_answer = #{quiz_answer}	
	WHERE quiz_no = #{quiz_no}
	</update>
	
	<delete id="deletePhoto" parameterType="string">
	DELETE FROM photo WHERE new_filename = #{param1}
	</delete>
	
	<update id="updatePhoto" parameterType="hashmap">
	UPDATE photo SET 
	ori_filename = #{ori_filename}
	,new_filename = #{new_filename}
	,board_no = #{quiz_no}
	WHERE new_filename = #{new_filename}
	</update>
	
	<select id="quizReportAllCount" resultType="int" parameterType="hashmap">
	SELECT count (quiz_report_no) FROM quiz_report
	<where>
		<if test="compl_yn.equals('true')">
		compl_flag = true
		</if>
		<if test="compl_yn.equals('false')">
		compl_flag = false
		</if>
	</where>
	</select>

	<select id="adminSearchQuizReport" resultType="hashmap" parameterType="hashmap" >
	SELECT * FROM quiz_report
	<where>
		<if test="compl_yn.equals('true')">
		compl_flag = true
		</if>
		<if test="compl_yn.equals('false')">
		compl_flag = false
		</if>
	</where>
	</select>
	
	<update id="quizReportComplete">
	UPDATE quiz_report SET compl_flag = true WHERE quiz_report_no = #{param1} ORDER BY quiz_report_no DESC
	</update>

	<!-- 2. 시험 상세보기 리스트 불러오기 -->
	<select id="test_category" resultType="hashmap">
	SELECT * FROM test_category WHERE test_cate_no = #{param1}
	</select>

	<select id="testCountListCall" resultType="hashmap">
	SELECT * FROM test_list INNER JOIN test_category
	USING (test_cate_no)
	WHERE test_cate_no = #{param1} AND test_list.del_flag = FALSE
	</select>
	<select id="subjectList" resultType="hashmap">
	SELECT subject_cate_no,subject_cate,sc.del_flag 
	FROM subject_category sc left JOIN test_category t
	USING (test_cate_no)
	WHERE test_cate_no = #{param1} AND sc.del_flag = false
	</select>
	<select id="detailedSubjectList" resultType="hashmap">
	SELECT * FROM detailed_subject_category dsc 
	LEFT JOIN subject_category USING (subject_cate_no)
	left JOIN test_category USING (test_cate_no)
	WHERE test_cate_no = #{param1} AND dsc.del_flag = false;
	</select>
	
	<select id="subjectRightCnt" resultType="int" parameterType="hashmap">
	SELECT COUNT(quiz_no) FROM quiz_solve WHERE correct_wrong = true AND subject_cate_no = #{subject_cate_no}
	</select>
	<select id="subjectAllCnt" resultType="int" parameterType="hashmap">
	SELECT COUNT(quiz_no) FROM quiz_solve WHERE subject_cate_no = #{subject_cate_no}
	</select>
	
	<select id="detailedSubjectRightCnt" resultType="int" parameterType="hashmap">
	SELECT COUNT(quiz_no) FROM quiz_solve WHERE correct_wrong = true AND detailed_subject_cate_no = #{detailed_subject_cate_no}	
	</select>
	<select id="detailedSubjectAllCnt" resultType="int" parameterType="hashmap">
	SELECT COUNT(quiz_no) FROM quiz_solve WHERE detailed_subject_cate_no  = #{detailed_subject_cate_no }	
	</select>
	
	<select id="bookmarkListCall" resultType="hashmap">
	SELECT quiz.quiz_no,tl.test_year,tl.test_count,quiz.quiz_index FROM bookmark 
	INNER JOIN quiz ON (bookmark.bookmark_quiz_no = quiz.quiz_no) 
	INNER JOIN test_list tl ON (tl.test_no = quiz.test_no) 
	WHERE user_id = #{param1}
	ORDER BY bookmark_date DESC
	</select>
	
	
	
</mapper>