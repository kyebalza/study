<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>
<!-- xml 이름상관 없음. *.xml로 설정했으니까 -->
<!-- 이 xml이 어떤 interface와 연결되는지 설정 -->
<mapper namespace="com.quiz.bank.dao.FreeBoardDAO">

	<!-- 자유게시판 리스트 호출 쿼리 -->
	<select id="FBlistCall" resultType="com.quiz.bank.dto.FreeBoardDTO">
		SELECT * FROM free_board JOIN board_category ON
			free_board.board_cate_no = board_category.board_cate_no
				WHERE del_flag = 0 ORDER BY board_no DESC LIMIT #{param1} OFFSET #{param2}
	</select>
	
	<!-- 공부 게시판 페이징 관련 -->
	<select id="FballCount" resultType="int">
		SELECT COUNT (board_no) FROM free_board WHERE del_flag = 0
	</select>

	<!-- 댓글 페이징 호출 쿼리 -->
	<select id="FBClistCall" resultType="com.quiz.bank.dto.ReplyDTO">
		SELECT * FROM reply WHERE del_flag = 0 AND board_name = 'free_board' AND board_no = #{param3}
			ORDER BY reply_no DESC LIMIT #{param1} OFFSET #{param2}
	</select>

	<!-- 댓글 페이징 관련 -->
	<select id="FbCallCount" resultType="int">
		SELECT COUNT (reply_no) FROM reply WHERE del_flag = 0 AND board_no = #{board_no}
	</select>

	<!-- 자유게시판 세부 카테고리 호출 -->
	<select id="freeboard_cate" resultType="hashmap">
		SELECT * FROM board_category WHERE board_name = 'free_board' 
	</select>

	<!-- 자유게시판 글작성 -->
	<insert id="freeWrite" 
		useGeneratedKeys="true"
		keyProperty="board_no"
		keyColumn="board_no"
		parameterType="com.quiz.bank.dto.FreeBoardDTO">
		INSERT INTO free_board (title, user_id, content, board_cate_no) 
			VALUES (#{title},#{user_id},#{content},#{board_cate_no})
	</insert>

	<!-- 자유게시판 파일 업로드 -->
	<insert id="freefileWrite">
		INSERT INTO photo(board_no,ori_filename,new_filename,board_name)
			VALUES(#{param1},#{param2},#{param3},'free_board')
	</insert>

	<!-- 자유게시판 상세보기 -->
	<select id="freeBoardDetail" resultType="com.quiz.bank.dto.FreeBoardDTO">
		SELECT * FROM free_board join board_category ON free_board.board_cate_no = board_category.board_cate_no WHERE board_no = #{param1}
	</select>
	
	<!-- 자유게시판 파일 가져오기 -->
	<select id="fbphoto" resultType="com.quiz.bank.dto.PhotoDTO">
		SELECT ori_filename, new_filename FROM photo WHERE board_no = #{board_no}
	</select>
	
	<!-- 자유게시판 조회수 올리기 -->
	<update id="freeBoardupHit">
		UPDATE free_board SET bHit = bHit+1 WHERE board_no = #{param1}
	</update>

	<!-- 자유게시판 삭제하기 -->
	<!-- 어 자유게시판 delete 가 아니라 del_flag 1로 만드는건데 낼 가서 수정하기 -->
	<update id="freedelete">
		UPDATE free_board SET del_flag = del_flag+1 WHERE board_no = #{param1}
	</update>
	
	<!-- 자유게시판 수정 -->
	<update id="freeUpdate" parameterType="hashmap">
		UPDATE free_board SET title = #{title} ,content = #{content}, board_cate_no = #{board_cate_no} WHERE board_no = #{board_no}
	</update>
	
	

	<!-- 자유 게시판 검색 쿼리 -->
	<select id="FreeSeasrch" parameterType="com.quiz.bank.dto.FreeBoardDTO" resultType="com.quiz.bank.dto.FreeBoardDTO">
		SELECT * FROM free_board JOIN board_category ON free_board.board_cate_no = board_category.board_cate_no
		
		
		<if test="FBSearchType != null and FBSearchType.equals('fball')">
			<choose>
				<when test="SearchType != null and SearchType.equals('all') ">
					WHERE del_flag = 0 AND title OR user_id LIKE CONCAT ('%',#{keyword},'%')
				</when>
				<when test="SearchType != null and SearchType.equals('tit') ">
					WHERE del_flag = 0 AND title LIKE CONCAT ('%',#{keyword},'%')
				</when>
				<when test="SearchType != null and SearchType.equals('user') ">
					WHERE del_flag = 0 AND user_id LIKE CONCAT ('%',#{keyword},'%')
				</when>	
			</choose>	
		</if>
	</select>

	<!-- 게시글 좋아요 여부 확인 -->
	<select id="likecheck" resultType="int">
		SELECT count(board_no) FROM board_like WHERE user_id = #{param1} AND board_no =#{param2} AND board_name = 'free_board'
	</select>

	<!-- 좋아요 삭제  -->
	<delete id="fbDownlike">
		DELETE FROM board_like WHERE user_id = #{param1} AND board_no =#{param2} AND board_name = #{param3}
	</delete>

	<!-- 좋아요 추가 -->
	<insert id="fbUplike">
		INSERT INTO board_like(user_id,board_no,board_name,reply_no) VALUES (#{param1}, #{param2}, #{param3},'0')
	</insert>
	
	<!-- 좋아요 수 확인 -->
	<select id="CountLike" resultType="int">
		SELECT count(*) FROM board_like where board_no = #{param1} and board_name = 'free_board'
	</select>
	



	
	<!-- 댓글 조회 -->
	<select id="freeboardcoment" resultType="com.quiz.bank.dto.FreeBoardDTO">
		SELECT * FROM reply where board_no = #{param1} and board_name ='free_board' and del_flag = 0
	</select>
	
	<!-- 댓글 등록 -->
	<insert id="fbcoment" useGeneratedKeys="true" keyProperty="reply_no" keyColumn="com.quiz.bank.dto.FreeBoardDTO" parameterType="com.quiz.bank.dto.FreeBoardDTO">
		INSERT INTO reply (board_name, board_no, user_id, reply_content, ori_reply) VALUES ('free_board', #{board_no}, #{user_id}, #{reply_content}, #{ori_reply})
	</insert>
	
	<!-- 댓글 삭제 -->
	<update id="fbcomdel">
		UPDATE reply SET del_flag = del_flag+1 WHERE reply_no = #{param1}
	</update>
	
	
	<!-- 게시글 신고 -->
 	<insert id="fbReport" parameterType="hashmap">
 		INSERT INTO report_board (board_name,board_no,reported_user,report_user,report_reason, report_state, reply_no,board_cate_no)
 			VALUES (#{board_name},#{board_no},#{reported_user},#{report_user},#{report}, '0', '0',#{board_cate_no})
 	</insert>
	
	<!-- 댓글 신고 -->
	<insert id="fbcomReport" parameterType="hashMap">
		INSERT INTO report_board (board_name, report_user, reported_user, report_reason, board_cate_no, board_no, reply_no, report_state) 
			VALUES (#{board_name}, #{report_user}, #{reported_user}, #{report_reason}, #{board_cate_no}, #{board_no}, #{reply_no}, '0')
	</insert>
	
	<!-- 댓글 좋아요 여부 확인 -->
	<select id="fbcrelike2" resultType="String">
		SELECT board_no, reply_no FROM board_like WHERE user_id = #{param1}AND board_no =#{param2} AND reply_no =#{param3} AND board_name = 'free_board'
	</select>
	
	<!-- 댓글 좋아요 -->
	<insert id="fbcreuplike">
		INSERT INTO board_like(user_id,board_no,reply_no,board_name)
 			VALUES (#{param1}, #{param2}, #{param3}, 'free_board')
	</insert>
	
	<!-- 댓글 좋아요 삭제 -->
 	<delete id="fbcrelike_del">
 		DELETE FROM board_like WHERE user_id = #{param1} AND board_no =#{param2} AND reply_no=#{param3} AND board_name = 'free_board'
 	</delete>
	
	
</mapper>