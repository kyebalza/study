<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>
<!-- xml 이름상관 없음. *.xml로 설정했으니까 -->
<!-- 이 xml이 어떤 interface와 연결되는지 설정 -->
<mapper namespace="com.quiz.bank.dao.StudyBoardDAO">	
	
	<!-- 리스트 불러오기
	<select id="list" resultType="StudyBoard">
		SELECT * FROM study_board
		 	ORDER BY board_no DESC
	</select> -->
	
	<!-- 공부게시판 페이징 -->
	<select id="listCall" resultType="StudyBoard">
		SELECT board_no, title, board_cate_no, user_id, reg_date FROM study_board ORDER BY board_no DESC
			LIMIT #{param1} OFFSET #{param2}
	</select>
	
	<select id="allCount" resultType="int">
		SELECT COUNT(board_no) FROM study_board
	</select>
	
	<!-- 게시판 세부 카테고리(문제,개념) 가져오기 -->
	<select id="studyboard_cate" resultType="hashmap">
		SELECT * FROM board_category WHERE board_name = 'study_board'
	</select>
	
	<!-- 자격증 종류 가져오기 -->
	<select id="test_name" resultType="hashmap">
		SELECT test_cate_no , test_cate FROM test_category ;
	</select>
	
	<!-- 시험 시행년도,회차 가져오기 -->
	<select id="test_year" resultType="hashmap">
		SELECT test_year, test_count FROM test_list INNER JOIN test_category using (test_cate_no);
	</select>
	
	<!-- 문제번호 가져오기 : 문제번호에  null값 있어서 오류? java.lang.NumberFormatException: For input string: "quiz_index" -->
	<select id="test_no" resultType="hashmap">
		SELECT quiz_index FROM quiz ORDER BY quiz_index
	</select>
	
	<!-- 문제가져오기 -->
	<select id="quizselect" resultType="hashmap">
		SELECT * FROM quiz
		LEFT JOIN test_category USING (test_cate_no)
			LEFT JOIN test_list USING (test_no)
			WHERE test_cate =#{test_cate}
				AND test_year = #{test_year}
				AND test_count = #{test_count}
				AND quiz_index = #{quiz_index}
				limit 1;
	</select>
	
	<!-- 글쓰기 -->
	<insert id="write" 
		useGeneratedKeys="true"
		keyProperty="board_no"
		keyColumn="board_no"
		parameterType="StudyBoard">
		INSERT INTO study_board (title, user_id, content, board_cate_no,quiz_no)
			VALUES(#{title}, #{user_id}, #{content},#{board_cate_no},#{quiz_no})
	</insert>
	
	<!-- 파일업로드 -->
	<insert id="fileWrite">
		INSERT INTO photo(board_no,ori_filename,new_filename,board_name)
			VALUES(#{param1},#{param2},#{param3},'study_board')
	</insert>
	
	<!-- 조회수 올리기 -->
	<update id="upHit">
		UPDATE study_board SET bHit = bHit+1
			WHERE board_no = #{param1}
	</update>
	
	<!-- 게시글 상세보기 -->
	<select id="detail" resultType="StudyBoard">
		select board_no,title,user_id,reg_date,bHit,content,board_name,quiz_no from study_board inner join board_category using (board_cate_no) 
			WHERE board_no=#{param1} AND board_name = 'study_board'
	</select>
	
	<!-- 상세보기 문제불러오기 -->
	<select id="studyQuiz" resultType="StudyBoard">
		SELECT quiz_no, quiz_content, option1, option2, option3, option4, option5 
			FROM quiz inner join study_board using (quiz_no) WHERE board_no = #{param1} limit 1;
	</select>
	
	<!-- 상세보기 파일 가져오기 -->
	<select id="photo" resultType="StudyBoard">
		SELECT ori_filename, new_filename FROM photo 
			WHERE board_no = #{board_no}
	</select>
	
	<!-- 수정하기 -->
	<update id="update" parameterType="hashmap">
		UPDATE study_board SET title = #{title}
			,content = #{content}
			WHERE board_no = #{board_no}
	</update>
	
	<!-- 삭제하기 -->
	<delete id="delete">
		DELETE FROM study_board WHERE board_no = #{param1}
	</delete>
	
	
	 <!-- 공부게시판 검색-->	
 	<select id="studySearch" parameterType="StudyBoard" resultType="StudyBoard">
 		SELECT * FROM study_board JOIN board_category ON study_board.board_cate_no = board_category.board_cate_no
 		
 		<choose>
 			<when test="SearchType != null and SearchType.equals('all')">
 				WHERE title OR user_id LIKE CONCAT ('%',#{keyword},'%')
 			</when>
 			<when test="SearchType != null and SearchType.equals('title') ">
				WHERE title LIKE CONCAT ('%',#{keyword},'%')
			</when>
			<when test="SearchType != null and SearchType.equals('user') ">
				WHERE user_id LIKE CONCAT ('%',#{keyword},'%')
			</when>
 		</choose>
 	</select>
 	
 	<select id="like" resultType="StudyBoard">
 		SELECT * FROM board_like WHERE board_no = #{param1} AND user_id = #{param2} AND board_name = 'study_board'
 	</select>
 	
 	<!-- 게시글 좋아요 여부 확인 -->
 	<select id="like2" resultType="String">
 		SELECT board_no FROM board_like WHERE user_id = #{param1} AND board_no =#{param2} AND board_name =#{param3}
 	</select>
 	
 	<!-- 게시글 좋아요 삭제 : board_name 필요 -> detail mapper에서 세부 카테고리로 board_name 가져와야함 -->
 	<delete id="like_del">
 		DELETE FROM board_like WHERE user_id = #{param1} AND board_no =#{param2} AND board_name = #{param3}
 	</delete>
 	
 	<!-- 게시글 좋아요 추가-->
 	<insert id="uplike">
 		INSERT INTO board_like(user_id,board_no,board_name)
 			VALUES (#{param1}, #{param2}, #{param3})
 	</insert> 
 	
 	<!-- 좋아요 수 -->
 	<select id="countlike" resultType="int">
 		SELECT COUNT(*) FROM board_like WHERE board_no = #{param1} AND board_name='study_board'
 	</select>
 
 	<!-- 공부게시판 신고하기 -->
 	<insert id="studyReport" parameterType="hashmap">
 		INSERT INTO report_board (board_name,board_no,reported_user,report_user,report_reason)
 			VALUES (#{board_name},#{board_no},#{reported_user},#{report_user},#{report})
 	</insert>
 	
 	<!-- 댓글조회 -->
 	<select id="studycoment" resultType="StudyBoard">
 		SELECT * FROM reply WHERE board_no = #{board_no} and board_name ='study_board' and del_flag = 0
 	</select>
 	
 	<!-- 댓글등록 -->
 	<insert id="sbcoment" 
 	useGeneratedKeys="true" 
 	keyProperty="reply_no" 
 	keyColumn="StudyBoard"
 	parameterType="StudyBoard">
 		INSERT INTO reply (board_name, board_no, user_id, reply_content)
 			VALUES('study_board', #{board_no}, #{user_id}, #{reply_content})
 	</insert>
 
 	<!-- 댓글 삭제 -->
 	<delete id="sbcomdel">
 		DELETE FROM reply WHERE reply_no = #{param1}
 	</delete>
 
 	<!-- 댓글 좋아요 여부 확인 -->
 	<select id="relike2" resultType="String">
 		SELECT board_no, reply_no FROM board_like WHERE user_id = #{param1} AND board_no =#{param2} AND reply_no =#{param3} AND board_name = 'study_board'
 	</select>
 
 	<!-- 게시글 좋아요 삭제-->
 	<delete id="relike_del">
 		DELETE FROM board_like WHERE user_id = #{param1} AND board_no =#{param2} AND reply_no=#{param3} AND board_name = 'study_board'
 	</delete>
 	
 	<!-- 게시글 좋아요 -->
 	<insert id="reuplike">
 		INSERT INTO board_like(user_id,board_no,reply_no,board_name)
 			VALUES (#{param1}, #{param2}, #{param3}, 'study_board')
 	</insert> 
 
 
 
 
 
 
</mapper>